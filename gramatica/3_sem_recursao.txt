Sem recursao na esquerda

MAIN -> STMT | FLIST | ε
FLIST -> FDEF FLIST | FDEF
FDEF -> def id(PARLIST){STMTLIST} 
PARLIST -> int id, PARLIST | int id  | ε
STMT -> int id; | ATRIBST; | PRINTST; | RETURNST; | IFSTMT | {STMTLIST} | ;
ATRIBST -> id = EXPR | id = FCALL
FCALL -> id(PARLISTCALL) 
PARLISTCALL -> id, PARLISTCALL | id | ε 
PRINTST -> print EXPR
RETURNST -> return 
IFSTMT -> if(EXPR) STMT else STMT | if(EXPR) STMT
STMTLIST -> STMT STMTLIST | STMT
EXPR -> NUMEXPR < NUMEXPR | NUMEXPR > NUMEXPR | NUMEXPR == NUMEXPR | NUMEXPR 
NUMEXPR -> TERM NUMEXPR'
NUMEXPR' -> + TERM NUMEXPR' | - TERM NUMEXPR' | ε
TERM -> FACTOR TERM'
TERM' -> * FACTOR TERM' | ε
FACTOR -> num | (NUMEXPR) | id