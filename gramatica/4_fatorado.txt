Fatorado a esquerda

MAIN -> STMT | FLIST | ε
FLIST -> FDEF FLIST'
FLIST' -> FLIST | ε
FDEF -> def id(PARLIST){STMTLIST}
PARLIST -> int id PARLIST' | ε
PARLIST' -> , PARLIST | ε
STMT -> int id; | ATRIBST; | PRINTST; | RETURNST; | IFSTMT | {STMTLIST} | ;
ATRIBST -> id = ATRIBST'
ATRIBST' -> EXPR | FCALL
FCALL -> call id(PARLISTCALL)  # Adicionei uma palavra chave para diferenciar o first de FCALL e de EXPR e resolver ambiguidade
PARLISTCALL -> id PARLISTCALL'
PARLISTCALL' -> , PARLISTCALL | ε
PRINTST -> print EXPR
RETURNST -> return
IFSTMT -> if(EXPR) STMT IFSTMT'
IFSTMT' -> else STMT | ε
STMTLIST -> STMT STMTLIST'
STMTLIST' -> STMTLIST | ε
EXPR -> NUMEXPR COMP_EXPR
COMP_EXPR -> < NUMEXPR | > NUMEXPR | == NUMEXPR | ε
NUMEXPR -> TERM NUMEXPR'
NUMEXPR' -> + TERM NUMEXPR' | - TERM NUMEXPR' | ε
TERM -> FACTOR TERM'
TERM' -> * FACTOR TERM' | ε
FACTOR -> num | (NUMEXPR) | id